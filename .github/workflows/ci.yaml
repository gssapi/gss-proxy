name: CI
on: [push, pull_request]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
       fail-fast: false
       matrix:
         name: [fedora, debian]
         compiler: [gcc, clang]
         include:
           - name: fedora
             container: fedora:latest
           - name: debian
             container: debian:sid
    container: ${{ matrix.container }}
    steps:
      - name: Install dependencies
        run: |
            if [ -f /etc/redhat-release ]; then
              dnf -y install --setopt='tsflags=' ${{ matrix.compiler }} \
                make autoconf automake libtool pkgconf-pkg-config \
                gettext-devel openssl-devel popt-devel docbook-style-xsl \
                xml-common libxslt krb5-workstation krb5-devel \
                libini_config-devel nss_wrapper socket_wrapper systemd-devel \
                libselinux-devel libverto-devel python3 python3-colorama \
                krb5-server krb5-server-ldap openldap-servers openldap-clients \
                which valgrind
            elif [ -f /etc/debian_version ]; then
              apt-get -q update
              apt-get -yq install ${{ matrix.compiler }} make autoconf \
                automake autotools-dev libtool pkg-config autopoint libssl-dev \
                docbook-xsl docbook-xml libxml2-utils xml-core xsltproc \
                libkrb5-dev libini-config-dev libkeyutils-dev libpopt-dev \
                libselinux1-dev libsystemd-dev systemd-dev libverto-dev \
                libnss-wrapper libsocket-wrapper python3 python3-colorama \
                krb5-kdc krb5-admin-server krb5-kdc-ldap ldap-utils slapd \
                valgrind
            fi
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup
        run: |
            autoreconf -fiv
            ./configure
      - name: Build and test
        env:
            CC: ${{ matrix.compiler }}
        run: make -s distcheck DISTCHECK_CONFIGURE_FLAGS="CC=\"$CC\""
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs ${{ matrix.name }}, ${{ matrix.compiler }}
          path: |
            config.log
            testdir
